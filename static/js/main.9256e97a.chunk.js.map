{"version":3,"sources":["Quote-box/Quote-text.js","Quote-box/Button.js","Quote-box/Quote-buttons.js","Quote-box/Quote-box.js","App.js","index.js"],"names":["QuoteText","props","className","id","quote","author","Button","href","target","rel","onClick","text","QuoteButtons","QuoteBox","state","isLoaded","randomNumber","quotes","handleClick","bind","fetch","then","res","json","data","setState","Math","floor","random","length","error","this","n","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAWeA,MAXf,SAAmBC,GACjB,OACE,yBAAQC,UAAU,aAAlB,UACE,4BAAYC,GAAG,OAAf,SACE,4BAAIF,EAAMG,UAEZ,4BAAYD,GAAG,SAAf,SAAyBF,EAAMI,aCStBC,MAff,SAAgBL,GACd,OACE,mBACEM,KAAMN,EAAMM,KACZJ,GAAIF,EAAME,GACVD,UAAWD,EAAMC,UACjBM,OAAQP,EAAMO,OAAS,SAAW,KAClCC,IAAKR,EAAMO,OAAS,sBAAwB,KAC5CE,QAAST,EAAMS,QANjB,SAQGT,EAAMU,QCoBEC,MA5Bf,SAAsBX,GACpB,OACE,sBAAKC,UAAU,gBAAf,UACE,cAAC,EAAD,CACEK,KACE,0CAEAN,EAAMG,MAFN,KAKAH,EAAMI,OACN,IAEFF,GAAG,cACHD,UAAU,uBACVS,KAAK,QACLH,OAAO,WAET,cAAC,EAAD,CACED,KAAK,IACLJ,GAAG,YACHQ,KAAK,YACLD,QAAST,EAAMS,cCiCRG,E,kDApDb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAQ,CACXC,UAAU,EACVC,aAAc,EACdC,OAAQ,IAEV,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPF,E,gEAUE,IAAD,OAClBC,MACE,sFAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GACC,EAAKC,SAAS,CACZV,UAAU,EACVE,OAAQO,EACRR,aAAcU,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,aAGlD,SAACC,GACC,EAAKL,SAAS,CAAEV,UAAU,EAAMe,e,oCAMtCC,KAAKN,SAAS,CACZT,aAAcU,KAAKC,MAAMD,KAAKE,SAAWG,KAAKjB,MAAMG,OAAOY,Y,+BAK7D,IAAMG,EAAID,KAAKjB,MAAME,aACfZ,EAAQ2B,KAAKjB,MAAMC,SAAWgB,KAAKjB,MAAMG,OAAOe,GAAG5B,MAAQ,KAC3DC,EAAS0B,KAAKjB,MAAMC,SAAWgB,KAAKjB,MAAMG,OAAOe,GAAG3B,OAAS,KACnE,OACE,sBAAKF,GAAG,YAAR,UACE,cAAC,EAAD,CAAWC,MAAOA,EAAOC,OAAQA,IACjC,cAAC,EAAD,CACEK,QAASqB,KAAKb,YACdd,MAAOA,EACPC,OAAQA,W,GA9CK4B,IAAMC,WCGdC,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9256e97a.chunk.js","sourcesContent":["function QuoteText(props) {\r\n  return (\r\n    <figure className=\"quote-text\">\r\n      <blockquote id=\"text\">\r\n        <p>{props.quote}</p>\r\n      </blockquote>\r\n      <figcaption id=\"author\">{props.author}</figcaption>\r\n    </figure>\r\n  );\r\n}\r\n\r\nexport default QuoteText;\r\n","function Button(props) {\r\n  return (\r\n    <a\r\n      href={props.href}\r\n      id={props.id}\r\n      className={props.className}\r\n      target={props.target ? \"_blank\" : null}\r\n      rel={props.target ? \"noopener noreferrer\" : null}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nfunction QuoteButtons(props) {\r\n  return (\r\n    <div className=\"quote-buttons\">\r\n      <Button\r\n        href={\r\n          \"https://twitter.com/intent/tweet?text=\" +\r\n          '\"' +\r\n          props.quote +\r\n          '\"' +\r\n          \" \" +\r\n          props.author +\r\n          \".\"\r\n        }\r\n        id=\"tweet-quote\"\r\n        className=\"twitter-share-button\"\r\n        text=\"Tweet\"\r\n        target=\"_blank\"\r\n      />\r\n      <Button\r\n        href=\"#\"\r\n        id=\"new-quote\"\r\n        text=\"New Quote\"\r\n        onClick={props.onClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuoteButtons;\r\n","import React from \"react\";\r\nimport QuoteText from \"./Quote-text\";\r\nimport QuoteButtons from \"./Quote-buttons\";\r\n\r\nclass QuoteBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      randomNumber: 0,\r\n      quotes: [],\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://raw.githubusercontent.com/maksssat/random-quote-machine/master/quotes.json\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            quotes: data,\r\n            randomNumber: Math.floor(Math.random() * data.length),\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ isLoaded: true, error });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({\r\n      randomNumber: Math.floor(Math.random() * this.state.quotes.length),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const n = this.state.randomNumber;\r\n    const quote = this.state.isLoaded ? this.state.quotes[n].quote : null;\r\n    const author = this.state.isLoaded ? this.state.quotes[n].author : null;\r\n    return (\r\n      <div id=\"quote-box\">\r\n        <QuoteText quote={quote} author={author} />\r\n        <QuoteButtons\r\n          onClick={this.handleClick}\r\n          quote={quote}\r\n          author={author}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuoteBox;\r\n","import \"./App.css\";\nimport QuoteBox from \"./Quote-box/Quote-box\";\n\nfunction App() {\n  return <QuoteBox />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}